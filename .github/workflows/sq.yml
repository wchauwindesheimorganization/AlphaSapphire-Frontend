name: SonarCloud

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for proper analysis

      - name: Set up .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'  # or your specific version

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"wchauwindesheimorganization_AlphaSapphire-Frontend" /o:"wchauwindesheimorganization" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build project
        run: dotnet build --no-restore

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

# name: SonarQube
# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build:
#     name: Build and analyze
#     runs-on: windows-latest
#     steps:
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: 17
#           distribution: 'zulu' # Alternative distribution options are available.
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Cache SonarQube Cloud packages
#         uses: actions/cache@v4
#         with:
#           path: ~\sonar\cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache SonarQube Cloud scanner
#         id: cache-sonar-scanner
#         uses: actions/cache@v4
#         with:
#           path: .\.sonar\scanner
#           key: ${{ runner.os }}-sonar-scanner
#           restore-keys: ${{ runner.os }}-sonar-scanner
#       - name: Install SonarQube Cloud scanner
#         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           New-Item -Path .\.sonar\scanner -ItemType Directory
#           dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
#       - name: Build and analyze
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         shell: powershell
#         run: |
#           .\.sonar\scanner\dotnet-sonarscanner begin /k:"wchauwindesheimorganization_AlphaSapphire-Frontend" /o:"wchauwindesheimorganization" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
#           dotnet build
#           .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

# # name: Build
# # on:
# #   push:
# #     branches:
# #       - develop
# #       - main
# #   pull_request:
# #     types: [opened, synchronize, reopened]

# # jobs:
# #   build:
# #     name: Build
# #     runs-on: pda-self-hosted-linux
# #     steps:
# #       - uses: actions/checkout@v2
# #         with:
# #           fetch-depth: 0

# #       # Set up Node.js environment
# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: '22' # Replace with your desired Node.js version

# #       # Install dependencies
# #       - name: Install Dependencies
# #         run: npm install

# #       # Run tests with coverage
# #       - name: Run Vitest with Coverage
# #         run: npm run test

# #       # SonarQube Scan
# #       - name: SonarQube Scan
# #         uses: sonarsource/sonarqube-scan-action@master
# #         env:
# #           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
# #           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
